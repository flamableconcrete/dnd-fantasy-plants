<style>
  /*Remove footer*/
  .phb:after {
    content: "";
  }

  a {
    color: inherit !important;	/*toc specifically wants black text. This resets the headers*/
  }

  .spellList a,
  .phb p em a,
  .phb ul li a
  {
    text-decoration: none;
  }

  .phb table tbody tr td {
      padding: .10em .1em;
  }

  .phb table tbody tr:nth-child(odd) {
    background-color: #efacb8;
  }

  .toc {
    column-count:4;
  }

  .toc a {
    color: inherit !important;	/*toc specifically wants black text. This resets the headers*/
  }

  .toc li span:nth-child(2){	/*Allow dot leaders to fill remaining space but not overlap*/
    width: auto;
    overflow: hidden;
    white-space: nowrap;
    display: block;
  }

  .toc li span:nth-child(2):after{
    font-family		: BookSanity;	/*Remove any header styles from dot leaders*/
    font-size   	: 0.317cm;
    font-weight		: normal;
    color			: black;
    content:
      " ........................................"
      "........................................."
      ".........................................";
  }

  .toc li span:first-child{
    float: right;
    font-family		: BookSanity;	/*Remove any header styles from page numbers*/
    font-size   	: 0.317cm;
    font-weight		: normal;
    color			: black;
    margin-left		: 1px;	/*Leaves a small space between page numbers and dot leaders*/
  }

/*Special cases for headings*/
  .toc li h3 span:nth-child(2):after{
  	content: " ";						/*Remove dot leaders on h3*/
  }

  .toc li h3 {
    margin-bottom: 4px !important;		/*Special spacing for h3*/
    margin-top: 10px !important;
    line-height: initial !important;	/*For some reason Multi-line h3 line spacing changed*/
  }

  .toc li h3 span:first-child{
  	line-height: 1.8em !important;  	/*Line page numbers up with Multi-line h3 better*/
  }

  .toc ul ul {
  	margin-left: 10px !important;		/*Original lists intented too much*/
  }

  .toc>ul>li {
    margin-bottom: initial !important;	/*margin for list items needs to be removed or 0*/
  }

</style>

{# ##############################################################
   # Plant list: tables
   ############################################################## #}
{% for region, rarity_dict in plants_for_table_entries.items() %}
    {% set region_loop = loop %}
    
{# the first pagebreak here is needed for the page above #}
\pagebreakNum

<div class="wide" style="text-align: center">

# {{ region }}

</div>

{% for rarity, plant_info_dict in rarity_dict.items() %}
    {% set plants = plant_info_dict['plants'] %}
{% if (region == 'Arctic' and rarity == 'Rare') or
      (region == 'City' and rarity == 'Uncommon') or
      (region == 'Coastal' and rarity == 'Uncommon') or
      (region == 'Desert' and rarity == 'Rare') or
      (region == 'Forest' and rarity == 'Common') or
      (region == 'Forest' and rarity == 'Rare') or
      (region == 'Jungle' and rarity == 'Uncommon') or
      (region == 'Jungle' and rarity == 'Legendary') or
      (region == 'Plain' and rarity == 'Uncommon') or
      (region == 'Mountain' and rarity == 'Rare') or
      (region == 'Ocean' and rarity == 'Rare') or
      (region == 'River' and rarity == 'Rare') or
      (region == 'Swamp' and rarity == 'Rare') or
      (region == 'Underdark' and rarity == 'Rare')
%}
\columnbreak

{% elif (region == 'Forest' and rarity == 'Uncommon') or
        (region == 'Forest' and rarity == 'Very Rare') or
        (region == 'Jungle' and rarity == 'Rare') or
        (region == 'Plain' and rarity == 'Common') or
        (region == 'Plain' and rarity == 'Very Rare')
        %}
\pagebreakNum

{% endif %}
{% if plants | length > 0 %}
##### Table {{ region_loop.index + 1 }}-{{ loop.index }}: {{ region }} - {{ rarity }}
| d{{ plant_info_dict['die size'] }} | Plant |
|:---:|:---:|
{% for plant in plants %}
{% if region in plant.Regions %}
| {{ plant.table_die_entry }} | [{{ plant.name }}](#p{{ plant.page }}) |
{% endif %}
{% if plant.table_die_entry == 61 %}
\columnbreak

##### Table 8-1: Plain - Very Common (cont'd)
| d100 | Plant |
|:---:|:---:|
{% endif %}
{% endfor %}
    
{% endif %}
{% endfor %}
{% endfor %}
